

# ----------------------------------------------------------------------------
# Define image properties
# ----------------------------------------------------------------------------

image:
  registry: "-"
  ## the Docker image path in the registry
  path: "aws-helm-kubernetes"
  ## tag defines the version/tag of the docker image
  ## if tag is not defined it is automatically set to "latest"
  tag: "v.01"
  ## pullPolicy defines the pull policy for docker images: IfNotPresent and Always
  ## default value is IfNotPresent
  pullPolicy: "IfNotPresent"
  ## port exposed by the docker image
  port: 3000
  ## metricsPort defines the port exposed by the docker image for metrics collection
  ## if metrics are not exposed this value needs to be commented out
  metricsPort: 9404
  ## applicationNameLabel represents the  Application Name and it must match the label com.hello-world.application from the docker image
  applicationNameLabel: "aws-helm"
  ## serviceNameLabel represents the  Service Name and it must match the label com.hello-world.service from the docker image
  serviceNameLabel: "aws-service"
# ----------------------------------------------------------------------------
# Define service properties
# ----------------------------------------------------------------------------

#If the service resource created by this chart is used by other charts,
#please update the service.yaml template to have a fixed service name.
service:
  name:hello-world
  ## prefixWithHelmRelease defines whether the service name will be prefixed with Helm release name
  ## when other services are calling this service this value should be set to false
  prefixWithHelmRelease: false
  ## exposedServicePort is the port exposed by the K8s service
  ## for all services exposing a rest api this value must be set to 80
  exposedServicePort: 80
  ## exposedMetricsPort is the port exposed by the K8s service for metrics grabbing
  exposedMetricsPort: 9404
  ## type is the Kubernetes service type: ClusterIP, NodePort, LoadBalancer, ExternalName
  ## default value is ClusterIP
  type: "ClusterIP"

# ----------------------------------------------------------------------------
# Define resources requests and limits
# ----------------------------------------------------------------------------

#resources:
#  limits:
#    cpu: 500m
#    memory: 3584Mi
#  requests:
#    cpu: 500m
 #   memory: 3584Mi

# ----------------------------------------------------------------------------
# Define liveness & readiness probes
# ----------------------------------------------------------------------------

probes:
  ## Liveness probe when failed trigger a pod restart.
  ## Several parameters can be changed to achieve the desired effect.
  ## After an initial delay, the probe will check at every defined period,
  ## wait for a response until the timeout and expect a certain number
  ## of succuessful or failed checks to change the liveness status.
  ## SuccessThreshold is not customizable and is always 1
  ## In this case, the pod will restart after 60s if not alive (30s+3*10s)
  liveness:
    initialDelaySeconds: 300
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  ## Readiness probe when successful allow trafic to be sent to the pod.
  ## Several parameters can be changed to achieve the desired effect.
  ## After an initial delay, the probe will check at every defined period,
  ## wait for a response until the timeout and expect a certain number
  ## of succuessful or failed checks to change the readiness status.
  readiness:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 1

## ------------------------------------------------------------------------------------------------------ ##
## defines custom values
## ------------------------------------------------------------------------------------------------------ ##

## replicaCount defines the number of container replicas running in parallel
replicaCount: 1

## revisionHistoryLimit specifies how many old ReplicaSets are kept for a Deployment
revisionHistoryLimit: 3
